(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-02087b0a"],{"00fd":function(t,s,a){"use strict";a.r(s);var n=function(){var t=this;t._self._c;return t._m(0)},i=[function(){var t=this,s=t._self._c;return s("div",[s("h1",[t._v("Notation 收费插件")]),s("blockquote",[s("p",[t._v("关于收费")]),s("p",[t._v("mind-map 是一个 MIT 协议的开源项目，理论上只要保留 mind-map 的版权声明，无论是否商用都不收费，这个协议以后也不会改变。另外无论是在线版，还是客户端都不会考虑收费。但是为了项目的可持续发展，会通过一些方式来获取收益，比如现有的赞助方式。而收费插件是第二个方式，基本原则是基本功能、核心功能、必要功能不收费，而可有可无的附加功能可能会做成收费的。")]),s("p",[t._v("最后，收费仅针对开发者，如果仅是在线版或者客户端的思维导图用户是无需付费的，所有功能均可免费使用。")])]),s("p",[t._v("Notation 是第二个收费插件，功能是提供单个节点的标记功能，也就是可以在单个节点上加个手绘风格的圈、背景、删除线等等，支持动画效果，就像下面这样：")]),s("img",{staticStyle:{width:"900px"},attrs:{src:a("83cc")}}),s("p",[t._v("你也可以在在线版中进行体验，先激活节点，然后点击上方【标记】按钮添加标记。")]),s("p",[t._v("内部实现是通过"),s("a",{attrs:{href:"https://github.com/rough-stuff/rough-notation"}},[t._v("rough-notation")]),t._v("库，所以如果你有精力，也可以自己基于这个库来实现这个插件。")]),s("h2",[t._v("收费")]),s("p",[t._v("现阶段收费方式比较原始，通过扫码转账备注你要购买的插件，以及你的邮箱地址，然后会将插件文件发送到你的邮箱。购买请在充分的使用和考虑后进行，如果你对前端开发不太熟悉，不知道如何使用插件，那么请谨慎考虑购买，没有特殊原因不会退费。如果你发现了 bug，或者有需求，可以提交相关的 issue。")]),s("p",[t._v("价格：")]),s("p",[t._v("1.￥ 19.9，仅包含打包后的文件，即.cjs.min.js、.esm.min.js 两种格式的文件。")]),s("p",[t._v("2.￥ 29.9，包含未打包的源码和打包后的文件。")]),s("img",{staticStyle:{width:"300px"},attrs:{src:a("076b")}}),s("img",{staticStyle:{width:"300px"},attrs:{src:a("4968")}}),s("h2",[t._v("注册")]),s("p",[t._v("1.引用打包后的文件：")]),s("pre",{staticClass:"hljs"},[s("code",[s("span",{staticClass:"hljs-keyword"},[t._v("import")]),t._v(" MindMap "),s("span",{staticClass:"hljs-keyword"},[t._v("from")]),t._v(" "),s("span",{staticClass:"hljs-string"},[t._v("'simple-mind-map'")]),t._v("\n"),s("span",{staticClass:"hljs-keyword"},[t._v("import")]),t._v(" Notation "),s("span",{staticClass:"hljs-keyword"},[t._v("from")]),t._v(" "),s("span",{staticClass:"hljs-string"},[t._v("'notation.cjs.min.js'")]),t._v("\n"),s("span",{staticClass:"hljs-comment"},[t._v("// 或 import Notation from 'notation.esm.min.js'")]),t._v("\n\nMindMap.usePlugin(Notation)\n")])]),s("p",[t._v("2.引用未打包的源码")]),s("p",[t._v("可以先进入到插件目录执行：")]),s("pre",{staticClass:"hljs"},[s("code",[t._v("npm link\n")])]),s("p",[t._v("然后进入到你的项目根目录执行：")]),s("pre",{staticClass:"hljs"},[s("code",[t._v("npm link simple-mind-map-plugin-notation\n")])]),s("p",[t._v("然后就可以直接导入进行使用：")]),s("pre",{staticClass:"hljs"},[s("code",[s("span",{staticClass:"hljs-keyword"},[t._v("import")]),t._v(" MindMap "),s("span",{staticClass:"hljs-keyword"},[t._v("from")]),t._v(" "),s("span",{staticClass:"hljs-string"},[t._v("'simple-mind-map'")]),t._v("\n"),s("span",{staticClass:"hljs-keyword"},[t._v("import")]),t._v(" Notation "),s("span",{staticClass:"hljs-keyword"},[t._v("from")]),t._v(" "),s("span",{staticClass:"hljs-string"},[t._v("'simple-mind-map-plugin-notation'")]),t._v("\n\nMindMap.usePlugin(Notation)\n")])]),s("p",[t._v("注册完且实例化"),s("code",[t._v("MindMap")]),t._v("后可通过"),s("code",[t._v("mindMap.notation")]),t._v("获取到该实例。")]),s("p",[t._v("注册该插件后，无需执行其他方法，手绘风格即可生效。")]),s("p",[t._v("如果你是使用 mindMap.addPlugin 方法来动态注册的组件，那么需要调用一次重新渲染的方法：")]),s("pre",{staticClass:"hljs"},[s("code",[t._v("mindMap.addPlugin(Notation)\nmindMap.reRender()\n")])]),s("h2",[t._v("命令")]),s("p",[t._v("注册了本插件后会在思维导图实例上新增"),s("code",[t._v("SET_NOTATION")]),t._v("命令，给节点添加标记使用该命令：")]),s("pre",{staticClass:"hljs"},[s("code",[t._v("mindMap.execCommand("),s("span",{staticClass:"hljs-string"},[t._v("'SET_NOTATION'")]),t._v(", appointNodes, show, config)\n")])]),s("p",[t._v("该命令可以传递三个参数：")]),s("ul",[s("li",[s("p",[s("code",[t._v("appointNodes")]),t._v("：给指定的节点实例添加标记，可以传单个节点实例，也可以传递一个节点实例数组，如果传空数组，则会给当前激活的节点添加标记；")])]),s("li",[s("p",[s("code",[t._v("show")]),t._v("：Boolean，必传，是否显示编辑；")])]),s("li",[s("p",[s("code",[t._v("config")]),t._v("：Object，可选，标记配置，对象格式，对象的详细字段如下：")])])]),s("table",[s("thead",[s("tr",[s("th",[t._v("字段名称")]),s("th",[t._v("类型")]),s("th",[t._v("默认值")]),s("th",[t._v("描述")])])]),s("tbody",[s("tr",[s("td",[t._v("type")]),s("td",[t._v("String")]),s("td",[t._v("circle")]),s("td",[t._v("标记类型，可选值：underline（下划线）、box（边框）、circle（圆）、highlight（高亮）、strike-through（删除线）、crossed-off（叉）")])]),s("tr",[s("td",[t._v("color")]),s("td",[t._v("String")]),s("td",[t._v("思维导图实例化选项中的hoverRectColor配置")]),s("td",[t._v("颜色")])]),s("tr",[s("td",[t._v("strokeWidth")]),s("td",[t._v("Number")]),s("td",[t._v("1")]),s("td",[t._v("线宽")])]),s("tr",[s("td",[t._v("padding")]),s("td",[t._v("Number")]),s("td",[t._v("20")]),s("td",[t._v("内边距")])]),s("tr",[s("td",[t._v("animate")]),s("td",[t._v("Boolean")]),s("td",[t._v("true")]),s("td",[t._v("是否开启动画")])])])]),s("p",[t._v("示例：")]),s("pre",{staticClass:"hljs"},[s("code",[s("span",{staticClass:"hljs-comment"},[t._v("// 给当前激活的节点添加一个圆类型的标记")]),t._v("\nmindMap.execCommand("),s("span",{staticClass:"hljs-string"},[t._v("'SET_NOTATION'")]),t._v(", [], "),s("span",{staticClass:"hljs-literal"},[t._v("true")]),t._v(", {\n    "),s("span",{staticClass:"hljs-attr"},[t._v("type")]),t._v(": "),s("span",{staticClass:"hljs-string"},[t._v("'circle'")]),t._v(",\n    "),s("span",{staticClass:"hljs-attr"},[t._v("color")]),t._v(": "),s("span",{staticClass:"hljs-string"},[t._v("'red'")]),t._v("\n})\n")])]),s("p",[t._v("添加标记后数据会以"),s("code",[t._v("notation")]),t._v("为名称保存到节点的"),s("code",[t._v("data")]),t._v("数据中。")])])}],_={},v=_,o=a("2877"),p=Object(o["a"])(v,n,i,!1,null,null,null);s["default"]=p.exports},"076b":function(t,s,a){t.exports=a.p+"img/alipay.jpg"},4968:function(t,s,a){t.exports=a.p+"img/wechat.jpg"},"83cc":function(t,s,a){t.exports=a.p+"img/标记.jpg"}}]);